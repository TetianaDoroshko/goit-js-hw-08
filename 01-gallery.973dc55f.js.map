{"mappings":"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","sources":["node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_define_property.js","node_modules/simplelightbox/dist/simple-lightbox.esm.js","node_modules/@swc/helpers/src/_class_call_check.js","src/js/01-gallery.js","src/js/gallery-items.js"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.3\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || ( element.getAttribute(this.options.sourceAttr) && (new RegExp('(' + this.options.fileExt + ')$', 'i')).test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let scrollDiv = document.createElement('div'),\n                    paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n\n                scrollDiv.classList.add('sl-scrollbar-measure');\n\n                document.body.appendChild(scrollDiv);\n                scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                document.body.removeChild(scrollDiv);\n\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self' ? this.relatedElements[this.currentImageIndex] : this.relatedElements[this.currentImageIndex].querySelector(this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n            this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = opacityTarget;\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { galleryItems, galleryItemsExtra } from './gallery-items';\n// import SimpleLightbox from 'simplelightbox';\nimport SimpleLightbox from 'simplelightbox/dist/simple-lightbox.esm';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// рендер разметки items\n\nconst galleryRef = document.querySelector('.gallery');\n\nmakeGalleryItemsMarkup(galleryItems);\nmakeGalleryItemsMarkup(galleryItemsExtra);\n\nfunction makeGalleryItemsMarkup(arrayItems) {\n  const itemsMarkupString = arrayItems\n    .map(item => {\n      return `\n        <a class=\"gallery__item\" href=\"${item.original}\">\n            <img class=\"gallery__image lazyload\" loading=\"lazy\" data-src=\"${item.preview}\" alt=\"${item.description}\" />\n        </a>`;\n    })\n    .join('');\n  galleryRef.insertAdjacentHTML('beforeend', itemsMarkupString);\n}\n\n// инициализация библиотеки\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captions: true,\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n});\n\n// проверка lazyloading, подключение lazysizes\n\nif ('loading' in HTMLImageElement.prototype) {\n  const images = document.querySelectorAll('img[loading]');\n  images.forEach(image => (image.src = image.dataset.src));\n} else {\n  const script = document.createElement('script');\n  script.src =\n    'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.3.2/lazysizes.min.js';\n  script.integrity =\n    'sha512-q583ppKrCRc7N5O0n2nzUiJ+suUv7Et1JGels4bXOaMFQcamPk9HjdUknZuuFjBNs7tsMuadge5k9RzdmO+1GQ==';\n  script.crossorigin = 'anonymous';\n  script.referrerpolicy = 'no-referrer';\n  document.body.append(script);\n}\n","export const galleryItems = [\n  {\n    preview: 'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\nexport const galleryItemsExtra = [\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/07/20/22/flowers-7180947__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/07/20/22/flowers-7180947_960_720.jpg',\n    description: 'Daffodils',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/09/16/34/blueberries-7184897__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/09/16/34/blueberries-7184897_960_720.jpg',\n    description: 'Bluberries',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/04/15/07/58/sunset-7133867__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/04/15/07/58/sunset-7133867_960_720.jpg',\n    description: 'Tree branch',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/01/15/18/swan-7167802__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/01/15/18/swan-7167802_960_720.jpg',\n    description: 'White swan',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/05/20/01/australian-shepherd-7176981__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2022/05/05/20/01/australian-shepherd-7176981_960_720.jpg',\n    description: 'Australian shepherd',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/04/30/11/59/bird-7165464__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/04/30/11/59/bird-7165464_960_720.jpg',\n    description: 'Bird',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/03/10/29/prague-7171444__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/03/10/29/prague-7171444_960_720.jpg',\n    description: 'Prague',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/04/22/18/18/sand-7150369__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/04/22/18/18/sand-7150369_960_720.jpg',\n    description: 'Desert',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/03/04/34/marseille-7170837__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/03/04/34/marseille-7170837_960_720.jpg',\n    description: 'Marseille',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/09/07/57/bridge-7183945__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/09/07/57/bridge-7183945_960_720.jpg',\n    description: 'Bridge',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2021/09/24/02/54/jellyfish-6651202__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2021/09/24/02/54/jellyfish-6651202_960_720.jpg',\n    description: 'Jellyfish',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/04/13/01/40/plum-blossoms-7129214__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/04/13/01/40/plum-blossoms-7129214_960_720.jpg',\n    description: 'Plum blossoms',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/01/25/08/26/animal-6965596__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/01/25/08/26/animal-6965596_960_720.jpg',\n    description: 'Deer',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/04/15/06/32/honey-bee-7133710__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/04/15/06/32/honey-bee-7133710_960_720.jpg',\n    description: 'Honey bee',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/04/27/07/44/paris-7159870__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/04/27/07/44/paris-7159870_960_720.jpg',\n    description: 'Louvre',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2020/07/04/20/12/green-lizard-5370821__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2020/07/04/20/12/green-lizard-5370821_960_720.jpg',\n    description: 'Lizard',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/02/25/22/59/pestle-7034940__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/02/25/22/59/pestle-7034940_960_720.jpg',\n    description: 'Spices',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/09/18/08/cows-7185276__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/09/18/08/cows-7185276_960_720.jpg',\n    description: 'Cows',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/15/12/27/windmill-7197380__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/15/12/27/windmill-7197380_960_720.jpg',\n    description: 'Windmill',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/15/10/24/seagulls-7197205__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/15/10/24/seagulls-7197205_960_720.jpg',\n    description: 'Seagulls',\n  },\n  {\n    preview: 'https://cdn.pixabay.com/photo/2022/05/15/10/08/mushroom-7197163__340.jpg',\n    original: 'https://cdn.pixabay.com/photo/2022/05/15/10/08/mushroom-7197163_960_720.jpg',\n    description: 'Mushroom',\n  },\n];\n"],"names":["$e5f9bd0c37e9914c$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$7dbcf7086e8d10dc$export$2e2bcd8739ae039","obj","value","$da756839c7c43f1c$var$SimpleLightbox","elements","options","_this","this","instance","Constructor","TypeError","sourceAttr","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","window","test","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","assign","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","Array","from","document","querySelectorAll","relatedElements","transitionPrefix","calculateTransitionPrefix","initialLocationHash","hash","getRelated","filter","element","src","getAttribute","_this1","imgArr","indexOf","push","createDomNodes","domNodes","wrapper","appendChild","closeButton","navigation","spinner","eventNamespace","event","isValidLink","currentTarget","preventDefault","isAnimating","initialImageIndex","openImage","addEventListener","isOpen","body","parentElement","classList","contains","throttle","controlCoordinates","currentImage","setAttribute","protoProps","staticProps","opts","get","supportsPassive","e","overlay","createElement","add","dataset","opacityTarget","overlayOpacity","innerHTML","concat","counter","caption","image","func","limit","inThrottle","apply","arguments","setTimeout","RegExp","s","documentElement","style","type","slice","call","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","isAppleDevice","scrollDiv","paddingRight","parseInt","offsetWidth","removeChild","originalPaddingRight","scrollbarWidth","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","fixedElements","padding","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","removeEventListener","fadeOut","toggleScrollbar","querySelector","minMax","location","substring","index","next","prev","nextImage","Image","prevImage","loadedImages","direction","slideDirection","newIndex","slide","_this2","show","adjustImage","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","loadImage","_this5","updateURL","captionText","imageWidth","width","imageHeight","height","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","captionContainer","hide","_this4","_this3","setCaption","min","max","bind","_this7","hashchangeHandler","getElementsByTagName","tagName","match","_this6","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","setZoomData","clientX","clientY","touches","_this8","_this9","sqrt","transitionCapable","possibleDir","_this10","isTouchDevice","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","split","newHash","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","updateHash","pos","speed","targetURL","events","callback","wrap","_didIteratorError","_iteratorError","_step","namespaces","_didIteratorError1","_iteratorError1","_step1","_iterator1","Symbol","iterator","_iteratorNormalCompletion1","done","passive","return","_iterator","_iteratorNormalCompletion","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion2","duration","_didIteratorError4","_iteratorError4","_iteratorNormalCompletion4","fade","step","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion3","_didIteratorError6","_iteratorError6","_didIteratorError5","_iteratorError5","_step4","_iterator4","_iteratorNormalCompletion5","isFadeIn","initialDisplay","input","fullyNamespacedEvents","_didIteratorError7","_iteratorError7","_step5","_iterator5","_didIteratorError8","_iteratorError8","_step6","_iterator6","_iteratorNormalCompletion8","elem","off","prototype","$d8d07e2615fdd861$var$galleryRef","$d8d07e2615fdd861$var$makeGalleryItemsMarkup","arrayItems","itemsMarkupString","map","item","original","preview","description","join","insertAdjacentHTML","$da756839c7c43f1c$export$2e2bcd8739ae039","HTMLImageElement","script","integrity","crossorigin","referrerpolicy","append"],"version":3,"file":"01-gallery.973dc55f.js.map"}